# e2e_test/sink/avro-enum.slt
# Test Avro enum support for varchar fields

statement ok
set sink_decouple = false;

# cleanup
system ok
rpk topic delete 'test-rw-sink-enum-basic' || true; \
(rpk sr subject delete 'test-rw-sink-enum-basic-value' && rpk sr subject delete 'test-rw-sink-enum-basic-value' --permanent) || true;

# ===== Test 1: Basic Enum Support =====
system ok
rpk topic create test-rw-sink-enum-basic

system ok
sr_register test-rw-sink-enum-basic-value AVRO << EOF
{
  "type": "record",
  "name": "BasicEnum",
  "fields": [
    {
      "name": "id",
      "type": "int"
    },
    {
      "name": "status",
      "type": {
        "type": "enum",
        "name": "Status",
        "symbols": ["ACTIVE", "INACTIVE", "PENDING"]
      }
    }
  ]
}
EOF

statement ok
create table t_basic_enum(
  id int,
  status varchar
);

statement ok
create sink sink_basic_enum from t_basic_enum with (
  connector = 'kafka',
  topic = 'test-rw-sink-enum-basic',
  properties.bootstrap.server = 'localhost:9092'
) format plain encode avro (
  force_append_only = true,
  schema.registry = 'http://localhost:8081/'
);

statement ok
create table from_basic_enum with (
  connector = 'kafka',
  topic = 'test-rw-sink-enum-basic',
  properties.bootstrap.server = 'localhost:9092'
) format plain encode avro (
  force_append_only = true,
  schema.registry = 'http://localhost:8081/'
);

statement ok
insert into t_basic_enum values 
  (1, 'ACTIVE'),
  (2, 'INACTIVE'),
  (3, 'PENDING');

sleep 5s

query IT
select * from from_basic_enum order by id;
----
1 ACTIVE
2 INACTIVE
3 PENDING

# ===== Test 2: Nullable Enum =====
system ok
rpk topic delete 'test-rw-sink-enum-nullable' || true; \
(rpk sr subject delete 'test-rw-sink-enum-nullable-value' && rpk sr subject delete 'test-rw-sink-enum-nullable-value' --permanent) || true;

system ok
rpk topic create test-rw-sink-enum-nullable

system ok
sr_register test-rw-sink-enum-nullable-value AVRO << EOF
{
  "type": "record",
  "name": "NullableEnum",
  "fields": [
    {
      "name": "id",
      "type": "int"
    },
    {
      "name": "status",
      "type": [
        "null",
        {
          "type": "enum",
          "name": "Status", 
          "symbols": ["DRAFT", "PUBLISHED"]
        }
      ]
    }
  ]
}
EOF

statement ok
create table t_nullable_enum(
  id int,
  status varchar
);

statement ok
create sink sink_nullable_enum from t_nullable_enum with (
  connector = 'kafka',
  topic = 'test-rw-sink-enum-nullable',
  properties.bootstrap.server = 'localhost:9092'
) format plain encode avro (
  force_append_only = true,
  schema.registry = 'http://localhost:8081/'
);

statement ok
create table from_nullable_enum with (
  connector = 'kafka',
  topic = 'test-rw-sink-enum-nullable',
  properties.bootstrap.server = 'localhost:9092'
) format plain encode avro (
  force_append_only = true,
  schema.registry = 'http://localhost:8081/'
);

statement ok
insert into t_nullable_enum values 
  (1, 'DRAFT'),
  (2, null);

sleep 5s

query IT
select * from from_nullable_enum order by id;
----
1 DRAFT
2 NULL

# ===== Test 3: Error Handling ===== 
statement ok
insert into t_basic_enum values (4, 'INVALID_STATUS');

sleep 5s

query IT
select * from from_basic_enum order by id;
----
1 ACTIVE
2 INACTIVE
3 PENDING

# ===== Cleanup =====
statement ok
drop sink sink_basic_enum;

statement ok
drop sink sink_nullable_enum;

statement ok
drop table t_basic_enum;

statement ok
drop table t_nullable_enum;

statement ok
drop table from_basic_enum;

statement ok
drop table from_nullable_enum;

# Delete topics
system ok
rpk topic delete test-rw-sink-enum-basic

system ok
rpk topic delete test-rw-sink-enum-nullable

# Delete schemas using the environment variable for consistency
system ok
curl -X DELETE 'http://localhost:8081//subjects/test-rw-sink-enum-basic-value'

system ok
curl -X DELETE 'http://localhost:8081//subjects/test-rw-sink-enum-basic-value?permanent=true'

system ok
curl -X DELETE 'http://localhost:8081//subjects/test-rw-sink-enum-nullable-value'

system ok
curl -X DELETE 'http://localhost:8081//subjects/test-rw-sink-enum-nullable-value?permanent=true'

statement ok
set sink_decouple to default;