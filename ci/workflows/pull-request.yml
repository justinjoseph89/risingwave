anchors:
  - auto-retry: &auto-retry
      automatic:
        # Agent terminated because the AWS EC2 spot instance killed by AWS.
        - signal_reason: agent_stop
          limit: 3
        - exit_status: -1
          signal_reason: none
          limit: 3
  - plugins:
    - cargo-cache: &cargo-cache
        nienbo/cache#v2.4.20:
          id: cargo
          key: "v1-cache-{{ id }}-{{ runner.os }}-{{ checksum 'Cargo.lock' }}"
          restore-keys:
            - "v1-cache-{{ id }}-{{ runner.os }}-"
            - "v1-cache-{{ id }}-"
          backend: s3
          s3:
            bucket: "${AWS_CARGO_CACHE_BUCKET}" 
            endpoint: "${AWS_ENDPOINT_URL}"  
            region: "${AWS_DEFAULT_REGION}" 
            args: "--no-progress"
          paths:
            - ".cargo/registry/index"
            - ".cargo/registry/cache"
            - ".cargo/git"  
    # we need to override args, so didn't include image here in the anchor
    - docker-compose: &docker-compose
        run: rw-build-env
        config: ci/docker-compose.yml
        mount-buildkite-agent: true
        propagate-environment: true

other-sql-backend: &other-sql-backend
  matrix:
    setup:
      label: [""]
      endpoint: [""]
    adjustments:
      - with:
          label: ""
          endpoint: ""
        skip: true # hack
      - with:
          label: "postgres"
          # PGPASSWORD=postgres psql -h db -p 5432 -U postgres -d rwmeta
          endpoint: "postgres://postgres:post\\tgres@db:5432/rwmeta"
      - with:
          label: "mysql"
          # mysql -h mysql-meta -P 3306 -u root -p123456 -D rwmeta
          endpoint: "mysql://root:123456@mysql-meta:3306/rwmeta"
  env:
    RISEDEV_SQL_ENDPOINT: "{{matrix.endpoint}}"


steps:
  - label: "check ci image rebuild"
    plugins:
      - monorepo-diff#v1.2.0:
          diff: "git diff --name-only origin/main"
          watch:
            - path: "ci/.env"
              config:
                command: "ci/build-ci-image.sh"
                label: "ci build images"
            - path: "ci/build-ci-image.sh"
              config:
                command: "ci/build-ci-image.sh"
                label: "ci build images"
  - wait

  - label: "build"
    command: "ci/scripts/build.sh -p ci-dev"
    key: "build"
    plugins:
      - *cargo-cache
      - docker-compose#v5.5.0: *docker-compose
    timeout_in_minutes: 240
    retry: *auto-retry

  - label: "build other components"
    command: "ci/scripts/build-other.sh"
    key: "build-other"
    plugins:
      - *cargo-cache  # Cache enabled
      - docker-compose#v5.5.0:
          <<: *docker-compose
          environment:
          - GITHUB_TOKEN
    timeout_in_minutes: 240
    retry: *auto-retry

  - label: "build (deterministic simulation)"
    command: "ci/scripts/build-simulation.sh"
    key: "build-simulation"
    plugins:
      - *cargo-cache
      - docker-compose#v5.5.0: *docker-compose
    retry: *auto-retry

  - label: "docslt"
    command: "ci/scripts/docslt.sh"
    key: "docslt"
    plugins:
      - *cargo-cache
      - docker-compose#v5.5.0: *docker-compose
    timeout_in_minutes: 120
    retry: *auto-retry

  - label: "end-to-end test"
    command: "ci/scripts/e2e-test-serial.sh -p ci-dev -m ci-3streaming-2serving-3fe"
    if: |
      !(build.pull_request.labels includes "ci/pr/run-selected") && build.env("CI_STEPS") == null
      || build.pull_request.labels includes "ci/run-e2e-tests"
      || build.env("CI_STEPS") =~ /(^|,)e2e-tests?(,|$$)/
    depends_on:
      - "build"
    plugins:
      - docker-compose#v5.5.0: *docker-compose
      - ./ci/plugins/upload-failure-logs
    timeout_in_minutes: 120
    parallelism: 4
    retry: *auto-retry