anchors:
  - auto-retry: &auto-retry
      automatic:
        # Agent terminated because the AWS EC2 spot instance killed by AWS.
        - signal_reason: agent_stop
          limit: 3
        - exit_status: -1
          signal_reason: none
          limit: 3
  - plugins:
    # we need to override args, so didn't include image here in the anchor
    - docker-compose: &docker-compose
        run: rw-build-env
        config: ci/docker-compose.yml
        mount-buildkite-agent: true
        propagate-environment: true
    - docker-compose-standard: &docker-compose-standard
        <<: *docker-compose
        run: ci-standard-env

  - sql-backend: &sql-backend
      matrix:
        setup:
          backend: [""]
          endpoint: [""]
        adjustments:
          - with:
              backend: ""
              endpoint: ""
            skip: true # hack
#          - with:
#              backend: "sqlite"
#              # sqlite3 /tmp/rwmeta.db
#              endpoint: "sqlite:///tmp/rwmeta.db?mode=rwc"
          - with:
              backend: "postgres"
              # PGPASSWORD=postgres psql -h db -p 5432 -U postgres -d rwmeta
              endpoint: "postgres://postgres:post\\tgres@db:5432/rwmeta"
          - with:
              backend: "mysql"
              # mysql -h mysql-meta -P 3306 -u root -p123456 -D rwmeta
              endpoint: "mysql://root:123456@mysql-meta:3306/rwmeta"
      env:
        RISEDEV_SQL_ENDPOINT: "{{matrix.endpoint}}"

steps:
  - label: "build"
    command: "ci/scripts/build.sh -p ci-release"
    key: "build"
    if: |
      build.env("CI_STEPS") !~ /(^|,)disable-build(,|$$)/
    plugins:
      - docker-compose#v5.5.0: *docker-compose
    timeout_in_minutes: 120
    retry: *auto-retry

  - label: "build other components"
    command: "ci/scripts/build-other.sh"
    key: "build-other"
    if: |
      build.env("CI_STEPS") !~ /(^|,)disable-build(,|$$)/
    plugins:
      - docker-compose#v5.5.0: *docker-compose
    timeout_in_minutes: 120
    retry: *auto-retry

  - label: "build simulation test"
    command: "ci/scripts/build-simulation.sh"
    key: "build-simulation"
    if: |
      build.env("CI_STEPS") !~ /(^|,)disable-build(,|$$)/
    plugins:
      - docker-compose#v5.5.0: *docker-compose
    timeout_in_minutes: 120
    retry: *auto-retry

  - label: "docslt"
    command: "ci/scripts/docslt.sh"
    key: "docslt"
    if: |
      build.env("CI_STEPS") !~ /(^|,)disable-build(,|$$)/
    plugins:
      - docker-compose#v5.5.0: *docker-compose
    timeout_in_minutes: 120
    retry: *auto-retry

  - group: "end-to-end test (release)"
    steps:
    - label: "end-to-end test ({{matrix.backend}} backend)"
      key: "e2e-test-release"
      <<: *sql-backend
      command: "ci/scripts/e2e-test-serial.sh -p ci-release -m ci-3streaming-2serving-3fe"
      if: |
        !(build.pull_request.labels includes "ci/main-cron/run-selected") && build.env("CI_STEPS") == null
        || build.pull_request.labels includes "ci/run-e2e-tests"
        || build.env("CI_STEPS") =~ /(^|,)e2e-tests?(,|$$)/
      depends_on:
        - "build"
      plugins:
        - docker-compose#v5.5.0: *docker-compose-standard
        - ./ci/plugins/upload-failure-logs
      timeout_in_minutes: 120
      retry: *auto-retry
    - label: "end-to-end preload-memory test"
      key: "e2e-preload-memory-test-release"
      command: "DEFAULT_ENABLE_MEM_PRELOAD_STATE_TABLE=true ci/scripts/e2e-test-serial.sh -p ci-release -m ci-3streaming-2serving-3fe"
      if: |
        build.tag == null && (!(build.pull_request.labels includes "ci/main-cron/run-selected") && build.env("CI_STEPS") == null
        || build.pull_request.labels includes "ci/run-preload-memory-tests")
      depends_on:
        - "build"
      plugins:
        - docker-compose#v5.5.0: *docker-compose-standard
        - ./ci/plugins/upload-failure-logs
      timeout_in_minutes: 60
      retry: *auto-retry

    - label: "slow end-to-end test ({{matrix.backend}} backend)"
      key: "slow-e2e-test-release"
      <<: *sql-backend
      command: "ci/scripts/slow-e2e-test.sh -p ci-release -m ci-3streaming-2serving-3fe"
      if: |
        build.tag == null && (!(build.pull_request.labels includes "ci/main-cron/run-selected") && build.env("CI_STEPS") == null
        || build.pull_request.labels includes "ci/run-slow-e2e-tests"
        || build.env("CI_STEPS") =~ /(^|,)slow-e2e-tests?(,|$$)/)
      depends_on:
        - "build"
        - "build-other"
      plugins:
        - docker-compose#v5.5.0: *docker-compose-standard
        - ./ci/plugins/upload-failure-logs
      timeout_in_minutes: 120
      retry: *auto-retry

    - label: "end-to-end test (parallel, {{matrix.backend}} backend)"
      key: "e2e-test-release-parallel"
      <<: *sql-backend
      command: "ci/scripts/e2e-test-parallel.sh -p ci-release"
      if: |
        build.tag == null && (!(build.pull_request.labels includes "ci/main-cron/run-selected") && build.env("CI_STEPS") == null
        || build.pull_request.labels includes "ci/run-e2e-tests"
        || build.env("CI_STEPS") =~ /(^|,)e2e-parallel-tests?(,|$$)/)
      depends_on:
        - "build"
        - "build-other"
        - "docslt"
      plugins:
        - docker-compose#v5.5.0: *docker-compose-standard
        - ./ci/plugins/upload-failure-logs
      timeout_in_minutes: 120
      retry: *auto-retry

  - group: "end-to-end connector test (release)"
    steps:
    - label: "end-to-end source test ({{matrix.backend}} backend)"
      key: "e2e-test-release-source"
      <<: *sql-backend
      command: "ci/scripts/e2e-source-test.sh -p ci-release"
      if: |
        !(build.pull_request.labels includes "ci/main-cron/run-selected") && build.env("CI_STEPS") == null
        || build.pull_request.labels includes "ci/run-e2e-source-tests"
        || build.env("CI_STEPS") =~ /(^|,)e2e-source-tests?(,|$$)/
      depends_on:
        - "build"
        - "build-other"
      plugins:
        - docker-compose#v5.5.0:
            <<: *docker-compose
            run: source-test-env
        - ./ci/plugins/upload-failure-logs
      timeout_in_minutes: 120
      retry: *auto-retry

    - label: "end-to-end sink test ({{matrix.backend}} backend)"
      key: "e2e-test-release-sink"
      <<: *sql-backend
      command: "ci/scripts/e2e-sink-test.sh -p ci-release"
      if: |
        !(build.pull_request.labels includes "ci/main-cron/run-selected") && build.env("CI_STEPS") == null
        || build.pull_request.labels includes "ci/run-e2e-sink-tests"
        || build.env("CI_STEPS") =~ /(^|,)e2e-sink-tests?(,|$$)/
      depends_on:
        - "build"
        - "build-other"
      plugins:
        - docker-compose#v5.5.0:
            <<: *docker-compose-standard
            run: sink-test-env
        - ./ci/plugins/upload-failure-logs
      timeout_in_minutes: 120
      retry: *auto-retry

  - label: "fuzz test"
    key: "fuzz-test"
    command: "ci/scripts/cron-fuzz-test.sh -p ci-release"
    if: |
      !(build.pull_request.labels includes "ci/main-cron/run-selected") && build.env("CI_STEPS") == null
      || build.pull_request.labels includes "ci/run-sqlsmith-fuzzing-tests"
      || build.env("CI_STEPS") =~ /(^|,)sqlsmith-fuzzing-tests?(,|$$)/
    depends_on:
      - "build"
      - "build-simulation"
    plugins:
      - docker-compose#v5.5.0: *docker-compose
      - ./ci/plugins/upload-failure-logs
    timeout_in_minutes: 120
    retry: *auto-retry

  - label: "meta backup test (release)"
    key: "e2e-meta-backup-test-release"
    command: "ci/scripts/run-meta-backup-test.sh -p ci-release -m ci-3streaming-2serving-3fe"
    if: |
      build.tag == null && (!(build.pull_request.labels includes "ci/main-cron/run-selected") && build.env("CI_STEPS") == null
      || build.pull_request.labels includes "ci/run-e2e-meta-backup-test"
      || build.env("CI_STEPS") =~ /(^|,)e2e-tests?(,|$$)/)
    depends_on:
      - "build"
      - "build-other"
      - "docslt"
    plugins:
      - docker-compose#v5.5.0: *docker-compose
      - ./ci/plugins/upload-failure-logs
    timeout_in_minutes: 45
    retry: *auto-retry

  # The timeout should be strictly more than timeout in `pull-request.yml`.
  # This ensures our `main-cron` workflow will be stable.
  - label: "unit test"
    key: "unit-test"
    command: "ci/scripts/run-unit-test.sh"
    if: |
      build.tag == null && (!(build.pull_request.labels includes "ci/main-cron/run-selected") && build.env("CI_STEPS") == null
      || build.pull_request.labels includes "ci/run-unit-test"
      || build.env("CI_STEPS") =~ /(^|,)unit-tests?(,|$$)/)
    plugins:
      - docker-compose#v5.5.0: *docker-compose
    timeout_in_minutes: 120
    retry: *auto-retry

  - label: "unit test (madsim)"
    key: "unit-test-deterministic"
    command: "MADSIM_TEST_NUM=100 timeout 50m ci/scripts/deterministic-unit-test.sh"
    if: |
      build.tag == null && (!(build.pull_request.labels includes "ci/main-cron/run-selected") && build.env("CI_STEPS") == null
      || build.pull_request.labels includes "ci/run-unit-test-deterministic-simulation"
      || build.env("CI_STEPS") =~ /(^|,)unit-tests?-deterministic-simulation(,|$$)/)
    plugins:
      - docker-compose#v5.5.0: *docker-compose
    timeout_in_minutes: 120
    retry: *auto-retry

  # Ddl statements will randomly run with background_ddl.
  - label: "background_ddl, arrangement_backfill recovery test (madsim)"
    key: "background-ddl-arrangement-backfill-recovery-test-deterministic"
    command: "TEST_NUM=12 KILL_RATE=1.0 BACKGROUND_DDL_RATE=0.8 USE_ARRANGEMENT_BACKFILL=true timeout 90m ci/scripts/deterministic-recovery-test.sh"
    if: |
      build.tag == null && (!(build.pull_request.labels includes "ci/main-cron/run-selected") && build.env("CI_STEPS") == null
      || build.pull_request.labels includes "ci/run-recovery-test-deterministic-simulation"
      || build.env("CI_STEPS") =~ /(^|,)recovery-tests?-deterministic-simulation(,|$$)/)
    depends_on: "build-simulation"
    plugins:
      - docker-compose#v5.5.0: *docker-compose
      # Only upload zipped files, otherwise the logs is too much.
      - ./ci/plugins/upload-failure-logs-zipped
    timeout_in_minutes: 60
    parallelism: 2
    retry: *auto-retry

  - label: "e2e java-binding test (release)"
    key: "e2e-java-binding-tests"
    command: "ci/scripts/java-binding-test.sh -p ci-release"
    if: |
      build.tag == null && (!(build.pull_request.labels includes "ci/main-cron/run-selected") && build.env("CI_STEPS") == null
      || build.pull_request.labels includes "ci/run-e2e-java-binding-tests"
      || build.env("CI_STEPS") =~ /(^|,)e2e-java-binding-tests?(,|$$)/)
    depends_on:
      - "build"
      - "build-other"
    plugins:
      - docker-compose#v5.5.0: *docker-compose
      - ./ci/plugins/upload-failure-logs
    # Extra 2 minutes to account for docker-compose latency.
    # See: https://github.com/risingwavelabs/risingwave/issues/9423#issuecomment-1521222169
    timeout_in_minutes: 120
    retry: *auto-retry

  - label: "micro benchmark"
    key: "run-micro-benchmarks"
    command: "ci/scripts/run-micro-benchmarks.sh"
    if: |
      build.tag == null && (!(build.pull_request.labels includes "ci/main-cron/run-selected") && build.env("CI_STEPS") == null
      || build.pull_request.labels includes "ci/run-micro-benchmarks"
      || build.env("CI_STEPS") =~ /(^|,)micro-benchmarks?(,|$$)/)
    plugins:
      - docker-compose#v5.5.0: *docker-compose
    timeout_in_minutes: 60
    retry: *auto-retry

  - label: "upload micro-benchmark"
    key: "upload-micro-benchmarks"
    if: |
      build.tag == null && (!(build.pull_request.labels includes "ci/main-cron/run-selected") && build.env("CI_STEPS") == null
      || build.pull_request.labels includes "ci/run-micro-benchmarks"
      || build.env("CI_STEPS") =~ /(^|,)micro-benchmarks?(,|$$)/)
    command:
      - "BUILDKITE_BUILD_NUMBER=$BUILDKITE_BUILD_NUMBER ci/scripts/upload-micro-bench-results.sh"
    depends_on: "run-micro-benchmarks"
    plugins:
      - docker-compose#v5.5.0: *docker-compose
    timeout_in_minutes: 15

  - label: "Backfill tests"
    key: "backfill-tests"
    command: "BUILDKITE=${BUILDKITE:-} ci/scripts/backfill-test.sh -p ci-release"
    if: |
      build.tag == null && (!(build.pull_request.labels includes "ci/main-cron/run-selected") && build.env("CI_STEPS") == null
      || build.pull_request.labels includes "ci/run-backfill-tests"
      || build.env("CI_STEPS") =~ /(^|,)backfill-tests?(,|$$)/)
    depends_on:
      - "build"
    plugins:
      - docker-compose#v5.5.0:
          <<: *docker-compose
          run: source-test-env
      - ./ci/plugins/upload-failure-logs
    timeout_in_minutes: 120
    retry: *auto-retry

  - label: "e2e standalone binary test"
    key: "e2e-standalone-binary-tests"
    command: "ci/scripts/e2e-test-serial.sh -p ci-release -m standalone"
    if: |
      !(build.pull_request.labels includes "ci/main-cron/run-selected") && build.env("CI_STEPS") == null
      || build.pull_request.labels includes "ci/run-e2e-standalone-tests"
      || build.env("CI_STEPS") =~ /(^|,)e2e-standalone-tests?(,|$$)/
    depends_on:
      - "build"
    plugins:
      - docker-compose#v5.5.0: *docker-compose
      - ./ci/plugins/upload-failure-logs
    timeout_in_minutes: 120
    retry: *auto-retry

  - label: "e2e single-node binary test"
    key: "e2e-single-node-binary-tests"
    command: "ci/scripts/e2e-test-serial.sh -p ci-release -m single-node"
    if: |
      !(build.pull_request.labels includes "ci/main-cron/run-selected") && build.env("CI_STEPS") == null
      || build.pull_request.labels includes "ci/run-e2e-single-node-tests"
      || build.env("CI_STEPS") =~ /(^|,)e2e-single-node-tests?(,|$$)/
    depends_on:
      - "build"
    plugins:
      - docker-compose#v5.5.0: *docker-compose
      - ./ci/plugins/upload-failure-logs
    timeout_in_minutes: 120
    retry: *auto-retry

  - label: "end-to-end time travel test"
    key: "e2e-time-travel-tests"
    command: "ci/scripts/e2e-time-travel-test.sh -p ci-release"
    if: |
      !(build.pull_request.labels includes "ci/main-cron/run-selected") && build.env("CI_STEPS") == null
      || build.pull_request.labels includes "ci/run-e2e-time-travel-tests"
      || build.env("CI_STEPS") =~ /(^|,)e2e-time-travel-tests?(,|$$)/
    depends_on:
      - "build"
      - "build-other"
      - "docslt"
    plugins:
      - docker-compose#v5.5.0: *docker-compose
      - ./ci/plugins/upload-failure-logs
    timeout_in_minutes: 120
    retry: *auto-retry

  - label: "release amd64 (dry-run)"
    command: "SKIP_RELEASE=1 ci/scripts/release.sh"
    if: |
      build.pull_request.labels includes "ci/run-release-dry-run" || build.env("CI_STEPS") =~ /(^|,)release-dry-run(,|$$)/
    plugins:
      - docker-compose#v5.5.0:
          <<: *docker-compose
          run: release-env-x86
          environment:
          - BINARY_NAME
          - BUILDKITE_TAG
          - BUILDKITE_SOURCE
    timeout_in_minutes: 60
    retry: *auto-retry

  # Wait for all tests to complete before releasing
  - wait: ~
    continue_on_failure: false
    if: build.tag != null && build.pull_request.id == null

  - label: "release amd64"
    key: "release-amd64"
    command: "ci/scripts/release.sh"
    if: build.tag != null && build.pull_request.id == null
    depends_on:
      - "build"
      - "build-other"
      - "docslt"
    plugins:
      - docker-compose#v5.5.0:
          <<: *docker-compose
          run: release-env-x86
          environment:
          - BINARY_NAME
          - BUILDKITE_TAG
          - BUILDKITE_SOURCE
          - GH_TOKEN
    timeout_in_minutes: 90
    retry: *auto-retry

  - label: "release docker image: amd64"
    key: "build-docker-amd64"
    command: "ci/scripts/docker.sh"
    if: build.tag != null && build.pull_request.id == null
    depends_on:
      - "release-amd64"
    timeout_in_minutes: 60
    retry: *auto-retry

  #- wait: ~

  # Only if all steps are successful, we upload coverage reports.
  #- label: "upload coverage reports"
  #  command: "ci/scripts/upload-coverage.sh"
  #  plugins:
  #    - docker-compose#v5.5.0: *docker-compose
  #  timeout_in_minutes: 10
  #  retry: *auto-retry
  #  soft_fail: true